# The distance between the front and
# rear axle of the racecar
wheelbase: 0.3302 # meters
# width of racecar
width: 0.2032 # meters
length: 0.4064 # meters

# Limits on the speed and steering angle
max_speed: 7.0 #  meters/second
max_steer_ang: 0.4189 # radians
max_accel: 3.0 # meters/second^2
max_decel: 20 # meters/second^2
max_steer_vel: 5.0 # radians/second
friction_coeff: 1.0 #0.523 # - (complete estimate)
height_cg: 0.08255 # m (roughly measured to be 3.25 in)
l_cg2rear: 0.17145 # m (decently measured to be 6.75 in)
l_cg2front: 0.15875 # m (decently measured to be 6.25 in)
C_S_front: 2.3 #.79 # 1/rad ? (estimated weight/4)
C_S_rear: 2.3  #.79 # 1/rad ? (estimated weight/4)
mass:  3.17 # kg (measured on car 'lidart')
moment_inertia: .0398378 # kg m^2 (estimated as a rectangle with width and height of car and evenly distributed mass, then shifted to account for center of mass location)

# The rate at which the pose and the lidar publish
update_pose_rate: 0.01
update_action_rate: 0.01

# Lidar simulation parameters
scan_beams: 1080
scan_fov: 4.71 #6.2831853 #4.71 # radians
# The standard deviation of the noise applied
# to the lidar simulation
scan_std: 0.01 # meters

# The distance from the center of the
# rear axis (base_link) to the lidar
scan_dist_to_base: 0.275 # meters

# maximum range of the lidar
scan_max_range: 15.0

# The probability threshold for points
# in the occupancy grid to be considered "free".
# Used for the lidar simulator.
free_thresh: 0.8

# Time to collision cutoff value
ttc_thresh: 0.01

# Indices for mux controller
mux_size: 5
joy_mux_idx: 0
key_mux_idx: 1
random_walker_mux_idx: 2
brake_mux_idx: 3
nav_mux_idx: 4
# **Add index for new planning method here**
# **(increase mux_size accordingly)**
new_method_mux_idx: -1

# Enables joystick if true
joy: true
# Joystick indices
joy_speed_axis: 1
joy_angle_axis: 3
joy_max_speed: 2. # meters/second
# Joystick indices for toggling mux
joy_button_idx: 4  # LB button
key_button_idx: 6 # not sure
brake_button_idx: 0 # A button
random_walk_button_idx: 1 # ? button
nav_button_idx: 5 # RB button
# **Add button for new planning method here**
new_button_idx: -1

# Keyboard characters for toggling mux
joy_key_char: "j"
keyboard_key_char: "k"
brake_key_char: "b"
random_walk_key_char: "r"
nav_key_char: "n"
# **Add button for new planning method here**
new_key_char: "z"

# Keyboard driving params
keyboard_speed: 1.8  # meters/second
keyboard_steer_ang: .3  # radians

# obstacle parameters
obstacle_size: 2

# The names of topics to listen and publish to
joy_topic: "/joy"
drive_topic: "/drive"
map_topic: "/map"
distance_transform_topic: "/dt"
scan_topic: "/scan"
pose_topic: "/pose"
ground_truth_pose_topic: "/gt_pose"
odom_topic: "/odom"
imu_topic: "/imu"
pose_rviz_topic: "/initialpose"
keyboard_topic: "/key"
brake_bool_topic: "/brake_bool"
mux_topic: "/mux"

# Topic names of various drive channels
rand_drive_topic: "/rand_drive"
brake_drive_topic: "/brake"
nav_drive_topic: "/nav"
# **Add name for new planning method here**
new_drive_topic: "/new_drive"

# name of file to write collision log to
collision_file: "collision_file"

# The names of the transformation frames published to
map_frame: "map"
base_frame: "base_link"
scan_frame: "laser"

# Turn this off for mapping
broadcast_transform: true
publish_ground_truth_pose: true

buffer_length: 10
batch_size: 100 # rollout
speed_clip_diff: 0.5

scan_method: "RM" #"CDDT" #RMGPU #RM
graph_path: "/model/frozen_model.pb"
